import streamlit as st
import networkx as nx
import matplotlib.pyplot as plt
import random
import time

# –ß–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –∫–æ–ª–µ—Å–µ —Ä—É–ª–µ—Ç–∫–∏
roulette_numbers = [0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11,
                    30, 8, 23, 10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18,
                    29, 7, 28, 12, 35, 3, 26]

# –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞ —Ä—É–ª–µ—Ç–∫–∏
roulette_graph = nx.Graph()
for i in range(len(roulette_numbers)):
    current = roulette_numbers[i]
    next_num = roulette_numbers[(i + 1) % len(roulette_numbers)] 
    roulette_graph.add_edge(current, next_num)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å–µ–¥–µ–π —á–∏—Å–ª–∞
def get_neighbors(number, graph, n_neighbors=2):
    neighbors = [number]
    current_index = roulette_numbers.index(number)
    for i in range(1, n_neighbors + 1):
        neighbors.append(roulette_numbers[(current_index + i) % len(roulette_numbers)])
        neighbors.append(roulette_numbers[(current_index - i) % len(roulette_numbers)])
    return sorted(set(neighbors))

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä—É–ª–µ—Ç–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –≤—Ä–∞—â–µ–Ω–∏—è
def animate_roulette(graph, bets, winning_number):
    nodes = list(graph.nodes)
    plot_placeholder = st.empty()  # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    
    for step in range(20):
        current_number = nodes[step % len(nodes)]
        color_map = ['yellow' if node in bets else
                     'green' if node == winning_number else
                     'lightblue' for node in nodes]
        color_map[nodes.index(current_number)] = 'red' 

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∞
        fig, ax = plt.subplots(figsize=(10, 8))
        nx.draw_circular(
            graph,
            with_labels=True,
            node_color=color_map,
            node_size=500,
            font_size=10,
            ax=ax
        )
        ax.set_title(f"–í—Ä–∞—â–µ–Ω–∏–µ —Ä—É–ª–µ—Ç–∫–∏: {current_number}", fontsize=16)
        plot_placeholder.pyplot(fig)  # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        time.sleep(0.1)

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    color_map = ['green' if node == winning_number else
                 'yellow' if node in bets else
                 'lightblue' for node in nodes]
    fig, ax = plt.subplots(figsize=(10, 8))
    nx.draw_circular(
        graph,
        with_labels=True,
        node_color=color_map,
        node_size=500,
        font_size=10,
        ax=ax
    )
    ax.set_title(f"–í—ã–∏–≥—Ä—ã—à–Ω–æ–µ —á–∏—Å–ª–æ: {winning_number}", fontsize=16)
    plot_placeholder.pyplot(fig)  # –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤ —Ç–æ–º –∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ

# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–≥—Ä—ã
def main_game():
    st.title("–ú–∏–Ω–∏-–∏–≥—Ä–∞: –†—É–ª–µ—Ç–∫–∞ üé≤")
    st.write("""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!  
        –í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å–µ–¥–µ–π, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É.  
        –ü–æ—Å–ª–µ –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏, –≤—ã —É–∑–Ω–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!""")

    bet_number = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏", roulette_numbers)
    n_neighbors = st.slider("–°–∫–æ–ª—å–∫–æ —Å–æ—Å–µ–¥–µ–π —É—á–∏—Ç—ã–≤–∞—Ç—å?", min_value=1, max_value=5, value=2)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É"):
        bets = get_neighbors(bet_number, roulette_graph, n_neighbors)
        st.write(f"–í—ã —Å—Ç–∞–≤–∏—Ç–µ –Ω–∞ —á–∏—Å–ª–∞: {bets}")
        winning_number = random.choice(roulette_numbers)
        animate_roulette(roulette_graph, bets, winning_number)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if winning_number in bets:
            st.success("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ")
        else:
            st.error("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        st.session_state['bets'] = bets
        st.session_state['winning_number'] = winning_number
        st.session_state['bet_number'] = bet_number
        st.session_state['page'] = 'info'

    # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if st.button("–£–∑–Ω–∞—Ç—å, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"):
        st.session_state['page'] = 'info'

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
def info_page():
    st.title("–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä—É–ª–µ—Ç–∫–∞? ü§î")
    st.write("""–†—É–ª–µ—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ç–µ–æ—Ä–∏–∏ –≥—Ä–∞—Ñ–æ–≤ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:
        - –ö–æ–ª–µ—Å–æ –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –≥—Ä–∞—Ñ, –≥–¥–µ –≤–µ—Ä—à–∏–Ω—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —á–∏—Å–ª–∞ —Ä—É–ª–µ—Ç–∫–∏.
        - –†–µ–±—Ä–∞ —Å–æ–µ–¥–∏–Ω—è—é—Ç —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –∫–æ–ª–µ—Å–µ.
        - –í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∞–º–∏ —á–∏—Å–ª–æ –∏ –µ–≥–æ —Å–æ—Å–µ–¥–∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—é—Ç—Å—è.""")

    # –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã
    if 'winning_number' in st.session_state and 'bets' in st.session_state:
        st.write(f"–í–∞—à–µ —á–∏—Å–ª–æ: {st.session_state['bet_number']}")
        st.write(f"–í—ã–∏–≥—Ä—ã—à–Ω–æ–µ —á–∏—Å–ª–æ: {st.session_state['winning_number']}")
        st.write(f"–í–∞—à–∏ —Å—Ç–∞–≤–∫–∏: {st.session_state['bets']}")

    st.write("""### –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã:
        - –ö–æ–ª–µ—Å–æ —Ä—É–ª–µ—Ç–∫–∏ –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –≥—Ä–∞—Ñ–∞.
        - –ü—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é.
        - –†—É–ª–µ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–º —á–∏—Å–ª–µ, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.""")

    if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–≥—Ä–µ"):
        st.session_state['page'] = 'game'

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
def main():
    if 'page' not in st.session_state:
        st.session_state['page'] = 'game'

    if st.session_state['page'] == 'game':
        main_game()
    elif st.session_state['page'] == 'info':
        info_page()

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    main()
